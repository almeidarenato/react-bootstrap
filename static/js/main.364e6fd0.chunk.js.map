{"version":3,"sources":["assets/boatImage.jpg","Home.js","About.js","Contact.js","NoMatch.js","components/Layout.js","components/NavigationBar.js","components/Jumbotron.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","About","Contact","NoMatch","Layout","props","Container","children","Styles","styled","div","NavigationBar","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Item","Link","to","boatimage","Jumbotron","fluid","App","Fragment","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,uC,qMCI9BC,EAAO,kBAClB,6BACE,4CACA,iNAKA,uNAKA,kMAIA,iYCjBSC,EAAQ,kBACnB,6BACE,0CACA,iNAKA,8tBCRSC,EAAU,kBACrB,6BACE,4CACA,iNAKA,8tBCRSC,EAAU,kBACrB,6BACE,4CACA,0F,QCJSC,EAAS,SAAAC,GAAK,OAAI,kBAACC,EAAA,EAAD,KAAYD,EAAME,W,2QCGjD,IAAMC,EAASC,IAAOC,IAAV,KAcCC,EAAgB,kBAC3B,kBAACH,EAAD,KACE,kBAACI,EAAA,EAAD,CAAQC,OAAO,MACb,kBAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,KAAnB,aACA,kBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,KACE,kBAACF,EAAA,EAAIG,KAAL,KACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,UAGJ,kBAACJ,EAAA,EAAIE,KAAL,KACE,kBAACF,EAAA,EAAIG,KAAL,KACE,kBAAC,IAAD,CAAMC,GAAG,UAAT,WAGJ,kBAACJ,EAAA,EAAIE,KAAL,KACE,kBAACF,EAAA,EAAIG,KAAL,KACE,kBAAC,IAAD,CAAMC,GAAG,YAAT,kB,ybClCd,IAAMhB,EAASC,IAAOC,IAAV,IAEUe,KAkBTC,EAAY,kBACvB,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACN,UAAU,SACrB,yBAAKA,UAAU,YACf,kBAACf,EAAA,EAAD,KACE,uCACA,oECCOsB,E,iLApBX,OAEE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhC,IACjC,kBAAC,IAAD,CAAO+B,KAAK,SAASC,UAAW/B,IAChC,kBAAC,IAAD,CAAO8B,KAAK,WAAWC,UAAW9B,IAClC,kBAAC,IAAD,CAAO8B,UAAW7B,Y,GAbd8B,aCEEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.364e6fd0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/boatImage.d61546cd.jpg\";","import React from \"react\";\n\n// import { Container } from './styles';\n\nexport const Home = () => (\n  <div>\n    <h2>Olá Mundo</h2>\n    <p>\n      Caros amigos, o novo modelo estrutural aqui preconizado apresenta\n      tendências no sentido de aprovar a manutenção das direções preferenciais\n      no sentido do progresso.\n    </p>\n    <p>\n      A certificação de metodologias que nos auxiliam a lidar com o julgamento\n      imparcial das eventualidades pode nos levar a considerar a reestruturação\n      do orçamento setorial.\n    </p>\n    <p>\n      Não obstante, a contínua expansão de nossa atividade acarreta um processo\n      de reformulação e modernização do impacto na agilidade decisória.\n    </p>\n    <p>\n      No entanto, não podemos esquecer que a estrutura atual da organização\n      auxilia a preparação e a composição do levantamento das variáveis\n      envolvidas. Do mesmo modo, a necessidade de renovação processual garante a\n      contribuição de um grupo importante na determinação de alternativas às\n      soluções ortodoxas.\n    </p>\n  </div>\n);\n","import React from \"react\";\n\n// import { Container } from './styles';\n\nexport const About = () => (\n  <div>\n    <h2>About Page</h2>\n    <p>\n      Caros amigos, o novo modelo estrutural aqui preconizado apresenta\n      tendências no sentido de aprovar a manutenção das direções preferenciais\n      no sentido do progresso.\n    </p>\n    <p>\n      A certificação de metodologias que nos auxiliam a lidar com o julgamento\n      imparcial das eventualidades pode nos levar a considerar a reestruturação\n      do orçamento setorial. Não obstante, a contínua expansão de nossa\n      atividade acarreta um processo de reformulação e modernização do impacto\n      na agilidade decisória. No entanto, não podemos esquecer que a estrutura\n      atual da organização auxilia a preparação e a composição do levantamento\n      das variáveis envolvidas. Do mesmo modo, a necessidade de renovação\n      processual garante a contribuição de um grupo importante na determinação\n      de alternativas às soluções ortodoxas.\n    </p>\n  </div>\n);\n","import React from \"react\";\n\n// import { Container } from './styles';\n\nexport const Contact = () => (\n  <div>\n    <h2>Contact Page</h2>\n    <p>\n      Caros amigos, o novo modelo estrutural aqui preconizado apresenta\n      tendências no sentido de aprovar a manutenção das direções preferenciais\n      no sentido do progresso.\n    </p>\n    <p>\n      A certificação de metodologias que nos auxiliam a lidar com o julgamento\n      imparcial das eventualidades pode nos levar a considerar a reestruturação\n      do orçamento setorial. Não obstante, a contínua expansão de nossa\n      atividade acarreta um processo de reformulação e modernização do impacto\n      na agilidade decisória. No entanto, não podemos esquecer que a estrutura\n      atual da organização auxilia a preparação e a composição do levantamento\n      das variáveis envolvidas. Do mesmo modo, a necessidade de renovação\n      processual garante a contribuição de um grupo importante na determinação\n      de alternativas às soluções ortodoxas.\n    </p>\n  </div>\n);\n","import React from \"react\";\n\n// import { Container } from './styles';\n\nexport const NoMatch = () => (\n  <div>\n    <h2>NoMatch Page</h2>\n    <p>Infelizmente não encontramos oque estava procurando :(</p>\n  </div>\n);\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nexport const Layout = props => <Container>{props.children}</Container>;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Nav, Navbar } from \"react-bootstrap\";\n\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  .navbar {\n    background-color: #222;\n  }\n  a,\n  .navbar-brand,\n  .navbar-nav .nav-link {\n    color: #bbb;\n    &:hover {\n      color: white;\n    }\n  }\n`;\n\nexport const NavigationBar = () => (\n  <Styles>\n    <Navbar expand=\"lg\">\n      <Navbar.Brand href=\"/\">Code Life</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <Nav.Item>\n            <Nav.Link>\n              <Link to=\"/\">Home</Link>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link>\n              <Link to=\"/about\">About</Link>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </Styles>\n);\n","import React from \"react\";\nimport { Jumbotron as Jumbo, Container } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport boatimage from \"../assets/boatImage.jpg\";\n\nconst Styles = styled.div`\n  .jumbo {\n    background: url(${boatimage}) no-repeat fixed bottom;\n    background-size: cover;\n    color: #ccc;\n    height: 200px;\n    position: relative;\n    z-index: -2;\n  }\n  .overlay {\n    background-color: #000;\n    opacity: 0.6;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: -1;\n  }\n`;\nexport const Jumbotron = () => (\n  <Styles>\n    <Jumbo fluid className=\"jumbo\">\n      <div className=\"overlay\"></div>\n      <Container>\n        <h1>Welcome</h1>\n        <p>Learn to code from Youtube Videos</p>\n      </Container>\n    </Jumbo>\n  </Styles>\n);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Home } from \"./Home\";\nimport { About } from \"./About\";\nimport { Contact } from \"./Contact\";\nimport { NoMatch } from \"./NoMatch\";\nimport { Layout } from \"./components/Layout\";\nimport { NavigationBar } from \"./components/NavigationBar\";\nimport { Jumbotron } from \"./components/Jumbotron\";\n\nclass App extends Component {\n  render() {\n    return (\n      // wrapper do react\n      <React.Fragment>\n        <Router>\n          <NavigationBar />\n          <Jumbotron />\n          <Layout>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/contact\" component={Contact} />\n              <Route component={NoMatch} />\n            </Switch>\n          </Layout>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}